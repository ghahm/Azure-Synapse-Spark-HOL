# <분석 요건> 운항 편수 Top 10 항공사 조회

from pyspark.sql.types import *

# 1.1 DataFrame 생성하고 자료 조회하기
flightSchema = StructType() \
                            .add("Month", StringType(), False) \
                            .add("DayofMonth", StringType(), False) \
                            .add("DayOfWeek", StringType(), False) \
                            .add("DepTime", IntegerType(), False) \
                            .add("ArrTime", IntegerType(), False) \
                            .add("UniqueCarrier", StringType(), False) \
                            .add("FlightNum", StringType(), False) \
                            .add("TailNum", StringType(), True) \
                            .add("ElapsedTime", IntegerType(), False) \
                            .add("AirTime", IntegerType(), False) \
                            .add("ArrDelay", IntegerType(), False) \
                            .add("DepDelay", IntegerType(), False) \
                            .add("Origin", StringType(), False) \
                            .add("Dest", StringType(), False) \
                            .add("Distance", IntegerType(), False) \
                            .add("TaxiIn", IntegerType(), False) \
                            .add("TaxiOut", IntegerType(), False) \
                            .add("Cancelled", IntegerType(), False) \
                            .add("CancellationCode", StringType(), False) \
                            .add("Diverted", IntegerType(), False)
      
flightDF = spark.read.format("csv") \
      .option("header", False) \
      .schema(flightSchema) \
      .load("abfss://demodata@adlsgen2krc.dfs.core.windows.net/sparkhol/flight-data/flights.csv")

# 쿼리 수행을 위하여 DataFrame을 임시 테이블로 등록
flightDF.registerTempTable("flightTable")

%%sql
-- 1.2 Table 현황 조회 (Temporary 테이블과 Permanent 테이블)
show tables

%%sql
-- 1.3 운항 편수 Top 10 항공사 조회 쿼리 from Temporary 테이블 (flightTable)
SELECT UniqueCarrier, count(UniqueCarrier) as cnt 
FROM flightTable
GROUP BY UniqueCarrier
ORDER BY cnt DESC
LIMIT 10

# 1.4 쿼리 수행을 위하여 DataFrame을 영구 테이블로 저장 (Saves the content of the DataFrame as the specified table)
# 수행 시간이 긴 이유 (최적화된 Parquet 파일로 변환하여 저장됨)
flightDF.write.saveAsTable("flightDSTable")

%%sql
-- 1.5 Table 현황 조회 (Temporary 테이블과 Permanent 테이블)
show tables

%%sql
-- 1.6 운항 편수 Top 10 항공사 조회 쿼리 from Permanent 테이블 (flightdstable)
SELECT UniqueCarrier, count(UniqueCarrier) as cnt 
FROM flightdstable
GROUP BY UniqueCarrier
ORDER BY cnt DESC
-- 1.7 Spark 클러스터의 Default ADLS Gen2 내 warehouse 경로 아래 flightdstable 관련 parquet 파일 생성 확인
